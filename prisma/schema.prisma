// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  accountActive Boolean   @default(true)
  // image         String?
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        Int       @default(1)
  cars          Car[]
  // accounts      Account[]
  // company       Company
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     Int? // relation scalar field  (used in the `@relation` attribute above)
}

model Company {
  id          Int     @id @default(autoincrement())
  name        String
  phoneNumber Int
  logo        String?
  email       String?
  address     String?
  description String?
  User        User[]
}

model Role {
  id       Int    @id @default(autoincrement())
  roleName String @unique
  User     User[]
}

model Car {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field  (used in the `@relation` attribute above)
  brand      Brand    @relation(fields: [brandId], references: [id])
  brandId    Int // relation scalar field  (used in the `@relation` attribute above)
  model      Model    @relation(fields: [modelId], references: [id])
  modelId    Int // relation scalar field  (used in the `@relation` attribute above)
  published  Boolean  @default(true)
  year       Int
  fuel       Fuel     @default(GASOLINA)
  miles      Int
  cilindrada Int
  pontency   Int
  color      String?
  doors      Int
  details    String
  price      Decimal
  photoUrl   String
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")
}

enum Fuel {
  DIESEL
  ELECTRICO
  GASOLINA
  GPL
  HIBRIDO_DIESEL
  HIBRIDO_GASOLINA
}

model Brand {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  models Model[]
  Car    Car[]
}

model Model {
  id      Int    @id @default(autoincrement())
  name    String @unique
  brand   Brand  @relation(fields: [brandId], references: [id])
  brandId Int
  Car     Car[]
}
